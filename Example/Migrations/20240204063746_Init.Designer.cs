// <auto-generated />
using Example.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Example.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240204063746_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Example.Models.Entities.AddressEntity", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            City = "City1",
                            Country = "Country1",
                            Street = "Street1"
                        },
                        new
                        {
                            AddressID = 2,
                            City = "City2",
                            Country = "Country2",
                            Street = "Street2"
                        },
                        new
                        {
                            AddressID = 3,
                            City = "City3",
                            Country = "Country3",
                            Street = "Street3"
                        },
                        new
                        {
                            AddressID = 4,
                            City = "City4",
                            Country = "Country4",
                            Street = "Street4"
                        },
                        new
                        {
                            AddressID = 5,
                            City = "City5",
                            Country = "Country5",
                            Street = "Street5"
                        },
                        new
                        {
                            AddressID = 6,
                            City = "City6",
                            Country = "Country6",
                            Street = "Street6"
                        },
                        new
                        {
                            AddressID = 7,
                            City = "City7",
                            Country = "Country7",
                            Street = "Street7"
                        },
                        new
                        {
                            AddressID = 8,
                            City = "City8",
                            Country = "Country8",
                            Street = "Street8"
                        },
                        new
                        {
                            AddressID = 9,
                            City = "City9",
                            Country = "Country9",
                            Street = "Street9"
                        },
                        new
                        {
                            AddressID = 10,
                            City = "City10",
                            Country = "Country10",
                            Street = "Street10"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Category0"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Category1"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Category2"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Category3"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Category4"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Category5"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Category6"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Category7"
                        },
                        new
                        {
                            CategoryID = 9,
                            CategoryName = "Category8"
                        },
                        new
                        {
                            CategoryID = 10,
                            CategoryName = "Category9"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ImageEntity", b =>
                {
                    b.Property<string>("ImageID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ImageID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageID = "a729e6ad-e7c6-4dd6-8691-5f865d1d89da",
                            ImageUrl = "https://picsum.photos/id/0/400/300"
                        },
                        new
                        {
                            ImageID = "a045ff2e-2306-4c23-a1a5-306fa7a63e2b",
                            ImageUrl = "https://picsum.photos/id/1/400/300"
                        },
                        new
                        {
                            ImageID = "3596cecf-2812-47b6-ae48-fef6b490cd83",
                            ImageUrl = "https://picsum.photos/id/2/400/300"
                        },
                        new
                        {
                            ImageID = "83dee5cc-f5b7-46d9-ba10-7562e82c27e2",
                            ImageUrl = "https://picsum.photos/id/3/400/300"
                        },
                        new
                        {
                            ImageID = "031474cc-e31d-41fb-864c-ac4ebb836dc3",
                            ImageUrl = "https://picsum.photos/id/4/400/300"
                        },
                        new
                        {
                            ImageID = "71746c9f-8b34-49d7-8c1f-d10ef3a98fde",
                            ImageUrl = "https://picsum.photos/id/5/400/300"
                        },
                        new
                        {
                            ImageID = "2991fcd6-c043-4f03-9c77-c98f57fa9ee4",
                            ImageUrl = "https://picsum.photos/id/6/400/300"
                        },
                        new
                        {
                            ImageID = "bccf35ee-5790-4176-b8a4-48bf4513be86",
                            ImageUrl = "https://picsum.photos/id/7/400/300"
                        },
                        new
                        {
                            ImageID = "2ddafcca-9f67-4886-b3ad-b975eaca2c8c",
                            ImageUrl = "https://picsum.photos/id/8/400/300"
                        },
                        new
                        {
                            ImageID = "8b8d9934-2ed9-4b8a-9a0c-b295cdddd59a",
                            ImageUrl = "https://picsum.photos/id/9/400/300"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ProductCategoryEntity", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 2
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 3
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 4
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 5
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryID = 6
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryID = 7
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryID = 8
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryID = 9
                        },
                        new
                        {
                            ProductID = 10,
                            CategoryID = 10
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ProductEntity", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ProductName = "Product0"
                        },
                        new
                        {
                            ProductID = 2,
                            ProductName = "Product1"
                        },
                        new
                        {
                            ProductID = 3,
                            ProductName = "Product2"
                        },
                        new
                        {
                            ProductID = 4,
                            ProductName = "Product3"
                        },
                        new
                        {
                            ProductID = 5,
                            ProductName = "Product4"
                        },
                        new
                        {
                            ProductID = 6,
                            ProductName = "Product5"
                        },
                        new
                        {
                            ProductID = 7,
                            ProductName = "Product6"
                        },
                        new
                        {
                            ProductID = 8,
                            ProductName = "Product7"
                        },
                        new
                        {
                            ProductID = 9,
                            ProductName = "Product8"
                        },
                        new
                        {
                            ProductID = 10,
                            ProductName = "Product9"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ProductImageEntity", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("ImageID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductID", "ImageID");

                    b.HasIndex("ImageID");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ImageID = "a729e6ad-e7c6-4dd6-8691-5f865d1d89da"
                        },
                        new
                        {
                            ProductID = 2,
                            ImageID = "a045ff2e-2306-4c23-a1a5-306fa7a63e2b"
                        },
                        new
                        {
                            ProductID = 3,
                            ImageID = "3596cecf-2812-47b6-ae48-fef6b490cd83"
                        },
                        new
                        {
                            ProductID = 4,
                            ImageID = "83dee5cc-f5b7-46d9-ba10-7562e82c27e2"
                        },
                        new
                        {
                            ProductID = 5,
                            ImageID = "031474cc-e31d-41fb-864c-ac4ebb836dc3"
                        },
                        new
                        {
                            ProductID = 6,
                            ImageID = "71746c9f-8b34-49d7-8c1f-d10ef3a98fde"
                        },
                        new
                        {
                            ProductID = 7,
                            ImageID = "2991fcd6-c043-4f03-9c77-c98f57fa9ee4"
                        },
                        new
                        {
                            ProductID = 8,
                            ImageID = "bccf35ee-5790-4176-b8a4-48bf4513be86"
                        },
                        new
                        {
                            ProductID = 9,
                            ImageID = "2ddafcca-9f67-4886-b3ad-b975eaca2c8c"
                        },
                        new
                        {
                            ProductID = 10,
                            ImageID = "8b8d9934-2ed9-4b8a-9a0c-b295cdddd59a"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ProductSizeEntity", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("SizeID")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "SizeID");

                    b.HasIndex("SizeID");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            SizeID = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SizeID = 2
                        },
                        new
                        {
                            ProductID = 3,
                            SizeID = 3
                        },
                        new
                        {
                            ProductID = 4,
                            SizeID = 4
                        },
                        new
                        {
                            ProductID = 5,
                            SizeID = 5
                        },
                        new
                        {
                            ProductID = 6,
                            SizeID = 6
                        },
                        new
                        {
                            ProductID = 7,
                            SizeID = 7
                        },
                        new
                        {
                            ProductID = 8,
                            SizeID = 8
                        },
                        new
                        {
                            ProductID = 9,
                            SizeID = 9
                        },
                        new
                        {
                            ProductID = 10,
                            SizeID = 10
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.SizeEntity", b =>
                {
                    b.Property<int>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeID"));

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("SizeID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeID = 1,
                            SizeName = "Size0"
                        },
                        new
                        {
                            SizeID = 2,
                            SizeName = "Size1"
                        },
                        new
                        {
                            SizeID = 3,
                            SizeName = "Size2"
                        },
                        new
                        {
                            SizeID = 4,
                            SizeName = "Size3"
                        },
                        new
                        {
                            SizeID = 5,
                            SizeName = "Size4"
                        },
                        new
                        {
                            SizeID = 6,
                            SizeName = "Size5"
                        },
                        new
                        {
                            SizeID = 7,
                            SizeName = "Size6"
                        },
                        new
                        {
                            SizeID = 8,
                            SizeName = "Size7"
                        },
                        new
                        {
                            SizeID = 9,
                            SizeName = "Size8"
                        },
                        new
                        {
                            SizeID = 10,
                            SizeName = "Size9"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.UserAddressEntity", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "AddressID");

                    b.HasIndex("AddressID");

                    b.ToTable("UserAddresses");

                    b.HasData(
                        new
                        {
                            UserID = "4796a57d-752c-4de2-ac2d-b9d4ff7ecf40",
                            AddressID = 1
                        },
                        new
                        {
                            UserID = "efe68746-c5b6-4702-bb7b-6a267fcf5157",
                            AddressID = 2
                        },
                        new
                        {
                            UserID = "b1c4b075-6433-41f9-a8e7-ec5226b676fd",
                            AddressID = 3
                        },
                        new
                        {
                            UserID = "7c38ac63-d286-4050-8266-18ef5e89b73e",
                            AddressID = 4
                        },
                        new
                        {
                            UserID = "ae4f3421-e051-490f-b5d3-c73e6ada82bd",
                            AddressID = 5
                        },
                        new
                        {
                            UserID = "8faa718f-0a94-450b-ac4b-f6a874c0f1c9",
                            AddressID = 6
                        },
                        new
                        {
                            UserID = "5ed8107a-e130-4cd0-a1fb-1047e37daf8e",
                            AddressID = 7
                        },
                        new
                        {
                            UserID = "339578d1-a71b-4cf0-bf38-8e205162d92e",
                            AddressID = 8
                        },
                        new
                        {
                            UserID = "875675eb-a97a-4cfe-8669-e021697a0244",
                            AddressID = 9
                        },
                        new
                        {
                            UserID = "9acd3af6-8610-4994-9f3d-1242446bf7fc",
                            AddressID = 10
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.UserEntity", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = "4796a57d-752c-4de2-ac2d-b9d4ff7ecf40",
                            Email = "user1@example.com",
                            FirstName = "FirstName1",
                            LastName = "LastName1",
                            PhoneNumber = "123456781"
                        },
                        new
                        {
                            UserID = "efe68746-c5b6-4702-bb7b-6a267fcf5157",
                            Email = "user2@example.com",
                            FirstName = "FirstName2",
                            LastName = "LastName2",
                            PhoneNumber = "123456782"
                        },
                        new
                        {
                            UserID = "b1c4b075-6433-41f9-a8e7-ec5226b676fd",
                            Email = "user3@example.com",
                            FirstName = "FirstName3",
                            LastName = "LastName3",
                            PhoneNumber = "123456783"
                        },
                        new
                        {
                            UserID = "7c38ac63-d286-4050-8266-18ef5e89b73e",
                            Email = "user4@example.com",
                            FirstName = "FirstName4",
                            LastName = "LastName4",
                            PhoneNumber = "123456784"
                        },
                        new
                        {
                            UserID = "ae4f3421-e051-490f-b5d3-c73e6ada82bd",
                            Email = "user5@example.com",
                            FirstName = "FirstName5",
                            LastName = "LastName5",
                            PhoneNumber = "123456785"
                        },
                        new
                        {
                            UserID = "8faa718f-0a94-450b-ac4b-f6a874c0f1c9",
                            Email = "user6@example.com",
                            FirstName = "FirstName6",
                            LastName = "LastName6",
                            PhoneNumber = "123456786"
                        },
                        new
                        {
                            UserID = "5ed8107a-e130-4cd0-a1fb-1047e37daf8e",
                            Email = "user7@example.com",
                            FirstName = "FirstName7",
                            LastName = "LastName7",
                            PhoneNumber = "123456787"
                        },
                        new
                        {
                            UserID = "339578d1-a71b-4cf0-bf38-8e205162d92e",
                            Email = "user8@example.com",
                            FirstName = "FirstName8",
                            LastName = "LastName8",
                            PhoneNumber = "123456788"
                        },
                        new
                        {
                            UserID = "875675eb-a97a-4cfe-8669-e021697a0244",
                            Email = "user9@example.com",
                            FirstName = "FirstName9",
                            LastName = "LastName9",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            UserID = "9acd3af6-8610-4994-9f3d-1242446bf7fc",
                            Email = "user10@example.com",
                            FirstName = "FirstName10",
                            LastName = "LastName10",
                            PhoneNumber = "1234567810"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.UserImageEntity", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID", "ImageID");

                    b.HasIndex("ImageID");

                    b.ToTable("UserImages");

                    b.HasData(
                        new
                        {
                            UserID = "4796a57d-752c-4de2-ac2d-b9d4ff7ecf40",
                            ImageID = "a729e6ad-e7c6-4dd6-8691-5f865d1d89da"
                        },
                        new
                        {
                            UserID = "efe68746-c5b6-4702-bb7b-6a267fcf5157",
                            ImageID = "a045ff2e-2306-4c23-a1a5-306fa7a63e2b"
                        },
                        new
                        {
                            UserID = "b1c4b075-6433-41f9-a8e7-ec5226b676fd",
                            ImageID = "3596cecf-2812-47b6-ae48-fef6b490cd83"
                        },
                        new
                        {
                            UserID = "7c38ac63-d286-4050-8266-18ef5e89b73e",
                            ImageID = "83dee5cc-f5b7-46d9-ba10-7562e82c27e2"
                        },
                        new
                        {
                            UserID = "ae4f3421-e051-490f-b5d3-c73e6ada82bd",
                            ImageID = "031474cc-e31d-41fb-864c-ac4ebb836dc3"
                        },
                        new
                        {
                            UserID = "8faa718f-0a94-450b-ac4b-f6a874c0f1c9",
                            ImageID = "71746c9f-8b34-49d7-8c1f-d10ef3a98fde"
                        },
                        new
                        {
                            UserID = "5ed8107a-e130-4cd0-a1fb-1047e37daf8e",
                            ImageID = "2991fcd6-c043-4f03-9c77-c98f57fa9ee4"
                        },
                        new
                        {
                            UserID = "339578d1-a71b-4cf0-bf38-8e205162d92e",
                            ImageID = "bccf35ee-5790-4176-b8a4-48bf4513be86"
                        },
                        new
                        {
                            UserID = "875675eb-a97a-4cfe-8669-e021697a0244",
                            ImageID = "2ddafcca-9f67-4886-b3ad-b975eaca2c8c"
                        },
                        new
                        {
                            UserID = "9acd3af6-8610-4994-9f3d-1242446bf7fc",
                            ImageID = "8b8d9934-2ed9-4b8a-9a0c-b295cdddd59a"
                        });
                });

            modelBuilder.Entity("Example.Models.Entities.ProductCategoryEntity", b =>
                {
                    b.HasOne("Example.Models.Entities.CategoryEntity", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.Models.Entities.ProductEntity", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Example.Models.Entities.ProductImageEntity", b =>
                {
                    b.HasOne("Example.Models.Entities.ImageEntity", "Image")
                        .WithMany("ProductImages")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.Models.Entities.ProductEntity", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Example.Models.Entities.ProductSizeEntity", b =>
                {
                    b.HasOne("Example.Models.Entities.ProductEntity", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.Models.Entities.SizeEntity", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Example.Models.Entities.UserAddressEntity", b =>
                {
                    b.HasOne("Example.Models.Entities.AddressEntity", "Address")
                        .WithMany("UserAddresses")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.Models.Entities.UserEntity", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Example.Models.Entities.UserImageEntity", b =>
                {
                    b.HasOne("Example.Models.Entities.ImageEntity", "Image")
                        .WithMany("UserImages")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.Models.Entities.UserEntity", "User")
                        .WithMany("UserImages")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Example.Models.Entities.AddressEntity", b =>
                {
                    b.Navigation("UserAddresses");
                });

            modelBuilder.Entity("Example.Models.Entities.CategoryEntity", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Example.Models.Entities.ImageEntity", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("UserImages");
                });

            modelBuilder.Entity("Example.Models.Entities.ProductEntity", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("Example.Models.Entities.SizeEntity", b =>
                {
                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("Example.Models.Entities.UserEntity", b =>
                {
                    b.Navigation("UserAddresses");

                    b.Navigation("UserImages");
                });
#pragma warning restore 612, 618
        }
    }
}
